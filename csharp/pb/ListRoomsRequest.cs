// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ListRoomsRequest.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pb {

  /// <summary>Holder for reflection information generated from ListRoomsRequest.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ListRoomsRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for ListRoomsRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ListRoomsRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZMaXN0Um9vbXNSZXF1ZXN0LnByb3RvEgJwYiIiChBMaXN0Um9vbXNSZXF1",
            "ZXN0Eg4KBnJlZ2lvbhgBIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.ListRoomsRequest), global::Pb.ListRoomsRequest.Parser, new[]{ "Region" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListRoomsRequest : pb::IMessage<ListRoomsRequest> {
    private static readonly pb::MessageParser<ListRoomsRequest> _parser = new pb::MessageParser<ListRoomsRequest>(() => new ListRoomsRequest());
    public static pb::MessageParser<ListRoomsRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.ListRoomsRequestReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ListRoomsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ListRoomsRequest(ListRoomsRequest other) : this() {
      region_ = other.region_;
    }

    public ListRoomsRequest Clone() {
      return new ListRoomsRequest(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private string region_ = "";
    public string Region {
      get { return region_; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ListRoomsRequest);
    }

    public bool Equals(ListRoomsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Region != other.Region) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Region.Length != 0) hash ^= Region.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Region.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Region);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Region.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      return size;
    }

    public void MergeFrom(ListRoomsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Region.Length != 0) {
        Region = other.Region;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
